====== Exercise 5 - SQL Basics 4 ======

1 | Create a new table called SALARIES with the following columns:

    salaryID (primary key)
    salary (the amount of salary described with two decimals)

--------------------------------------------------
USE exercise;
CREATE TABLE  SALARIES(
salaryID INT PRIMARY KEY,
salary DECIMAL(10, 2));
--------------------------------------------------

##################################################
2 | Create a connection between SALARIES and EMPS tables (Tip: First think what column you should bring from EMPS table and then create a new column for it). Use the following options in foreign key definition:

    UPDATE CASCADE
    DELETE NO ACTION

--------------------------------------------------
ALTER TABLE SALARIES
ADD COLUMN EMPNUM DECIMAL(3,0),
ADD CONSTRAINT fk_EMPNUM
FOREIGN KEY (EMPNUM)
REFERENCES EMPS(EMPNUM)
ON UPDATE CASCADE
ON DELETE NO ACTION;
--------------------------------------------------

##################################################
3 | Add a new column called fromdate. The current date should be added automatically for this column when new data is inserted.
--------------------------------------------------
ALTER TABLE SALARIES
ADD COLUMN fromdate DATE DEFAULT NOW();
--------------------------------------------------

##################################################
4 | Add automatic counter for salaryID column so that this field value will be automatically generated each time a new data is inserted.
--------------------------------------------------
ALTER TABLE SALARIES
MODIFY COLUMN salaryID INT AUTO_INCREMENT;
--------------------------------------------------

##################################################
5 | Create input validation check with TRIGGER so that salaries exceeding 10000 euros cannot be inserted to the table.
--------------------------------------------------
DELIMITER $$
CREATE TRIGGER salary_check
BEFORE INSERT ON SALARIES
FOR EACH ROW
	BEGIN
		IF NEW.salary > 10000 THEN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = 'Salary exceeds maximum allowed amount';
		END if;
	END $$
--------------------------------------------------

##################################################
6 | Modify previously created input validation so that inserted value must also be even (num % 2 = 0). Important: Trigger cannot be modified so you will need to drop the existing trigger and create a new one.
--------------------------------------------------
DROP TRIGGER IF EXISTS salary_check;

DELIMITER $$
CREATE TRIGGER salary_check
BEFORE INSERT ON SALARIES
FOR EACH ROW
BEGIN
    IF NEW.salary > 10000 OR MOD(NEW.salary, 2) != 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Salary must be less than or equal to 10000 euros and even';
    END IF;
END $$
--------------------------------------------------